name: test

on:
  pull_request:
    branches: [dev]
  push:
    branches: [dev]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Check licenses
        run: yarn licenses:check

      - name: Linting
        run: yarn lint

      - name: Prettier
        run: yarn format

      - name: Compile
        run: yarn check-types

  e2e:
    runs-on: ubuntu-latest
    needs: test
    env:
      FCLI_TLS_PATH: './e2e-env/config/cert/'
      FCLI_SERVER: 'localhost:50052'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: 16

      - name: Start env
        run: |
          cd e2e-env
          docker-compose up -d

      - name: Install dependencies
        run: yarn install

      - name: Wait for cred defs to be created
        run: sleep 120s
        shell: bash

      - name: Start frontend
        run: |
          yarn
          PORT=3001 NODE_ENV=test REACT_APP_HOST_BACKEND=http://localhost:5001 REACT_APP_HOST_WEBSOCKET=ws://localhost:5001 yarn client:start &

      - name: Install cli
        run: |
          curl https://raw.githubusercontent.com/findy-network/findy-agent-cli/HEAD/install.sh > install.sh
          chmod a+x install.sh
          sudo ./install.sh -b /bin

      - name: Cypress run
        uses: cypress-io/github-action@v5
        timeout-minutes: 10
        with:
          browser: chrome
          headed: true

      - name: Collect docker logs
        if: ${{ failure() }}
        uses: jwalton/gh-docker-logs@v2.0.2
        with:
          dest: './tests_output/docker-logs'

      - name: archive logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: e2e-logs
          path: tests_output

      # after the test run completes store videos and any screenshots
      # NOTE: screenshots will be generated only if E2E test failed
      # thus we store screenshots only on failures
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
