// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Infra Stack Created 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "FindyAgencyDemoBackend": Object {
      "Properties": Object {
        "ContainerServiceDeployment": Object {
          "Containers": Array [
            Object {
              "ContainerName": "agency-demo",
              "Environment": Array [
                Object {
                  "Variable": "AGENCY_AUTH_URL",
                },
                Object {
                  "Variable": "AGENCY_AUTH_ORIGIN",
                },
                Object {
                  "Variable": "AGENCY_USER_NAME",
                },
                Object {
                  "Variable": "AGENCY_PUBLIC_DID_SEED",
                },
                Object {
                  "Variable": "AGENCY_KEY",
                },
                Object {
                  "Variable": "SERVER_ADDRESS",
                },
                Object {
                  "Variable": "SERVER_PORT",
                },
                Object {
                  "Variable": "WALLET_URL",
                },
              ],
              "Image": "ghcr.io/findy-network/agency-demo:latest",
              "Ports": Array [
                Object {
                  "Port": "5000",
                  "Protocol": "HTTP",
                },
              ],
            },
          ],
          "PublicEndpoint": Object {
            "ContainerName": "agency-demo",
            "ContainerPort": 5000,
          },
        },
        "Power": "nano",
        "Scale": 1,
        "ServiceName": "agency-demo",
      },
      "Type": "AWS::Lightsail::Container",
    },
    "MyTestStackfrontendMyTestStackfrontendarecordFA69DF2A": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "MyTestStackfrontendMyTestStackfrontenddistributionCFDistributionCE45D98B",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": "DUMMY",
        "Name": "example.example.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "MyTestStackfrontendMyTestStackfrontendbucket32024486": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketName": "example.example.com",
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "WebsiteConfiguration": Object {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestStackfrontendMyTestStackfrontendbucketPolicy198AA21E": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "MyTestStackfrontendMyTestStackfrontendbucket32024486",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject*",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "MyTestStackfrontendMyTestStackfrontendoriginaccessidentityCBE7DCDB",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "MyTestStackfrontendMyTestStackfrontendbucket32024486",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "MyTestStackfrontendMyTestStackfrontendoriginaccessidentityCBE7DCDB",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "MyTestStackfrontendMyTestStackfrontendbucket32024486",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "MyTestStackfrontendMyTestStackfrontendoriginaccessidentityCBE7DCDB",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "MyTestStackfrontendMyTestStackfrontendbucket32024486",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunction2A30CDB8": Object {
      "DependsOn": Array [
        "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E1CDCE",
        "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRole54B6A1AA",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": "cdk-hnb659fds-assets-123456789012-us-east-1",
          "S3Key": "861509f9607aa6bb9fd7034fb10fe6f0c60d91dfd7f010b9ef666869dec9bbd9.zip",
        },
        "Handler": "index.certificateRequestHandler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRole54B6A1AA",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRole54B6A1AA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E1CDCE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate",
                "acm:AddTagsToCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "route53:changeResourceRecordSets",
              "Condition": Object {
                "ForAllValues:StringEquals": Object {
                  "route53:ChangeResourceRecordSetsActions": Array [
                    "UPSERT",
                  ],
                  "route53:ChangeResourceRecordSetsRecordTypes": Array [
                    "CNAME",
                  ],
                },
                "ForAllValues:StringLike": Object {
                  "route53:ChangeResourceRecordSetsNormalizedRecordNames": Array [
                    "*.example.example.com",
                  ],
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":route53:::hostedzone/DUMMY",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRoleDefaultPolicyD8E1CDCE",
        "Roles": Array [
          Object {
            "Ref": "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunctionServiceRole54B6A1AA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorResourceBC6C0DEA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DomainName": "example.example.com",
        "HostedZoneId": "DUMMY",
        "Region": "us-east-1",
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorFunction2A30CDB8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "MyTestStackfrontendMyTestStackfrontenddistributionCFDistributionCE45D98B": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "example.example.com",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "none",
                },
                "QueryString": false,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/index.html",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "DefaultTTL": 0,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "none",
                },
                "QueryString": false,
              },
              "MaxTTL": 0,
              "MinTTL": 0,
              "PathPattern": "/version.txt",
              "TargetOriginId": "origin1",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/oob/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/connections*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/credentials/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/proofs/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/demo/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/server/last-reset",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/public/*",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT",
              ],
              "CachedMethods": Array [
                "GET",
                "HEAD",
              ],
              "Compress": true,
              "ForwardedValues": Object {
                "Cookies": Object {
                  "Forward": "all",
                },
                "Headers": Array [
                  "*",
                ],
                "QueryString": true,
              },
              "PathPattern": "/ws",
              "TargetOriginId": "origin2",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachedMethods": Array [
              "GET",
              "HEAD",
            ],
            "Compress": true,
            "ForwardedValues": Object {
              "Cookies": Object {
                "Forward": "none",
              },
              "QueryString": false,
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "MyTestStackfrontendMyTestStackfrontendbucket32024486",
                  "RegionalDomainName",
                ],
              },
              "Id": "origin1",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "MyTestStackfrontendMyTestStackfrontendoriginaccessidentityCBE7DCDB",
                      },
                    ],
                  ],
                },
              },
            },
            Object {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "CustomOriginConfig": Object {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginKeepaliveTimeout": 60,
                "OriginProtocolPolicy": "https-only",
                "OriginReadTimeout": 60,
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "example.com",
              "Id": "origin2",
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Fn::GetAtt": Array [
                "MyTestStackfrontendMyTestStackfrontendcertificateCertificateRequestorResourceBC6C0DEA",
                "Arn",
              ],
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "MyTestStackfrontendMyTestStackfrontendoriginaccessidentityCBE7DCDB": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Access bucket example.example.com only from Cloudfront",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
